apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.17.0 (HEAD)
  labels:
    app: api
  name: api
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    app: api
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: api-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/run/desktop/mnt/host/c/Users/gman/dockerRoulio/docker_tp/api"
---
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: client-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/run/desktop/mnt/host/c/Users/gman/dockerRoulio/docker_tp/api"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: api-claim0
  name: api-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: client-claim0
  name: client-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.17.0 (HEAD)
  labels:
    app: client
  name: client
spec:
  ports:
  - name: "3000"
    port: 3000
    targetPort: 80
  selector:
    app: client
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.17.0 (HEAD)
  labels:
    app: api
  name: api
spec:
  selector:
      matchLabels:
        app: api
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - image: react-flask-app-api
        name: api
        ports:
        - containerPort: 5000
        resources: {}
        imagePullPolicy: Never
      restartPolicy: Always
      volumes:
      - name: api-claim0
        persistentVolumeClaim:
          claimName: api-claim0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.17.0 (HEAD)
  labels:
    app: client
  name: client
spec:
  selector:
      matchLabels:
        app: client
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - image: react-flask-app-client
        name: client
        ports:
        - containerPort: 80
        resources: {}
        volumeMounts:
        - mountPath: /app
          name: client-claim0
        imagePullPolicy: Never
      restartPolicy: Always
      volumes:
      - name: client-claim0
        persistentVolumeClaim:
          claimName: client-claim0
status: {}